{"version":3,"sources":["app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponents.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetails.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","features/errors/TestErrors.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","updateAttendeeFollowing","following","followersCount","clearSelectedActivity","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","isLoggedIn","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","Divider","LoadingComponents","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","relaxed","divided","ribbon","Extra","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","NotFound","Inline","primary","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","widths","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","TestErrors","baseUrl","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.0a366849.chunk.js","sourcesContent":["import { Profile } from './profile';\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[]\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n\n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport { PaginatedResult } from '../models/pagination';\nimport { Photo, Profile, UserActivity } from '../models/profile';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from '../stores/store';\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay)\n  })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`\n  return config;\n})\n\naxios.interceptors.response.use(async response => {\n  if (process.env.NODE_ENV === 'development') await sleep(1000);\n  const pagination = response.headers['pagination'];\n  if (pagination) {\n    response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n    return response as AxiosResponse<PaginatedResult<any>>\n  }\n  return response;\n}, (error: AxiosError) => {\n  const { data, status, config, headers } = error.response!;\n  switch (status) {\n    case 400:\n      if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n        history.push('/not-found');\n      }\n      if (data.errors) {\n        const modalStateErrors = [];\n        for (const key in data.errors) {\n          if (data.errors[key]) {\n            modalStateErrors.push(data.errors[key])\n          }\n        }\n        throw modalStateErrors.flat();\n      } else {\n        toast.error(data);\n      }\n      break;\n    case 401:\n      if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\n        store.userStore.logout();\n        toast.error('Session expired - please login again');\n      }\n      break;\n    case 404:\n      history.push('/not-found');\n      break;\n    case 500:\n      store.commonStore.setServerError(data);\n      history.push('/server-error');\n      break;\n  }\n  return Promise.reject(error);\n})\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\n    .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\n  update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n};\n\nconst Account = {\n  current: () => requests.get<User>('/account'),\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\n  fbLogin: (accessToken: string) => requests\n    .post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\n  refreshToken: () => requests.post<User>('/account/refreshToken', {}),\n  verifyEmail: (token: string, email: string) =>\n    requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`, {}),\n  resendEmailConfirm: (email: string) =>\n    requests.get(`/account/resendEmailConfirmationLink?email=${email}`)\n}\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append('File', file);\n    return axios.post<Photo>('photos', formData, {\n      headers: { 'Content-type': 'multipart/form-data' }\n    })\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles\n};\n\nexport default agent;","import { User } from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  bio?: string;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}","import { Activity, ActivityFormValues } from './../models/activity';\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { format } from 'date-fns';\nimport { store } from './store';\nimport { Profile } from '../models/profile';\nimport { Pagination, PagingParams } from '../models/pagination';\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  }\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') this.predicate.delete(key);\n      })\n    }\n\n    switch (predicate) {\n      case 'all':\n        resetPredicate();\n        this.predicate.set('all', true);\n        break;\n      case 'isGoing':\n        resetPredicate();\n        this.predicate.set('isGoing', true);\n        break;\n      case 'isHost':\n        resetPredicate();\n        this.predicate.set('isHost', true);\n        break;\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n    }\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\n    params.append('pageSize', this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString())\n      } else {\n        params.append(key, value);\n      }\n    })\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort((a, b) =>\n      a.date!.getTime() - b.date!.getTime());\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, 'dd MMM yyyy');\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    )\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach(activity => {\n        this.setActivity(activity);\n      })\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  }\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  }\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        })\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  }\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        a => a.username === user.username\n      )\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  }\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  }\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  }\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = { ...this.getActivity(activity.id), ...activity }\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\n      })\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      })\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach(activity => {\n      activity.attendees.forEach(attendee => {\n        if (attendee.username === username) {\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      })\n    })\n  }\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  }\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  loadingActivities = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      activeTab => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? 'followers' : 'following';\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    )\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  }\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loadingProfile = false);\n    }\n  }\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.uploading = false);\n    }\n  }\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      })\n    } catch (error) {\n      runInAction(() => this.loading = false);\n      console.log(error);\n    }\n  }\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n          this.loading = false;\n        }\n      })\n    } catch (error) {\n      runInAction(() => this.loading = false);\n      console.log(error);\n    }\n  }\n\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = { ...this.profile, ...profile as Profile };\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\n        }\n        this.followings.forEach(profile => {\n          if (profile.username === username) {\n            profile.following ? profile.followersCount-- : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        })\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      })\n    } catch (error) {\n      runInAction(() => this.loadingFollowings = false);\n    }\n  }\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(username, predicate!);\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingActivities = false;\n      })\n    }\n  }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n  fbAccessToken: string | null = null;\n  fbLoading = false;\n  refreshTokenTimeout: any;\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n      runInAction(() => this.user = user);\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem('jwt');\n    this.user = null;\n    history.push('/');\n  }\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      store.commonStore.setToken(user.token);\n      runInAction(() => this.user = user);\n      this.startRefreshTokenTimer(user);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  register = async (creds: UserFormValues) => {\n    try {\n      await agent.Account.register(creds);\n      history.push(`/account/registerSuccess?email=${creds.email}`);\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  }\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  }\n\n  getFacebookLoginStatus = async () => {\n    window.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        this.fbAccessToken = response.authResponse.accessToken;\n      }\n    })\n  }\n\n  facebookLogin = () => {\n    this.fbLoading = true;\n    const apiLogin = (accessToken: string) => {\n      agent.Account.fbLogin(accessToken).then(user => {\n        store.commonStore.setToken(user.token);\n        this.startRefreshTokenTimer(user);\n        runInAction(() => {\n          this.user = user;\n          this.fbLoading = false;\n        })\n        history.push('/activities');\n      }).catch(error => {\n        console.log(error);\n        runInAction(() => this.fbLoading = false);\n      })\n    }\n    if (this.fbAccessToken) {\n      apiLogin(this.fbAccessToken);\n    } else {\n      window.FB.login(response => {\n        apiLogin(response.authResponse.accessToken);\n      }, { scope: 'public_profile,email' })\n    }\n  }\n\n  refreshToken = async () => {\n    this.stopRefreshTokenTimer();\n    try {\n      const user = await agent.Account.refreshToken();\n      runInAction(() => this.user = user);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  private startRefreshTokenTimer(user: User) {\n    const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\n    const expires = new Date(jwtToken.exp * 1000);\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\n  }\n\n  private stopRefreshTokenTimer() {\n    clearTimeout(this.refreshTokenTimeout);\n  }\n}","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem('jwt');\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem('jwt', token)\n        } else {\n          window.localStorage.removeItem('jwt')\n        }\n      }\n    )\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  }\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  }\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null\n  }\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  }\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  }\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\n\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach(comment => {\n            comment.createdAt = new Date(comment.createdAt + 'Z');\n          })\n          this.comments = comments\n        });\n      })\n\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment)\n        });\n      })\n    }\n  }\n\n  stopHubConnection = () => {\n    this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\n  }\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  }\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}","import { observer } from 'mobx-react-lite';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\n\nexport default observer(function NavBar() {\n  const { userStore: { user, logout, isLoggedIn } } = useStore();\n\n  return (\n    <Menu inverted fixed='top'>\n      <Container>\n        <Menu.Item as={NavLink} exact to='/' header>\n          <img src='/assets/logo.png' alt='logo' style={{ marginRight: '10px' }} />\n                  Reactivities\n              </Menu.Item>\n        {isLoggedIn &&\n          <>\n            <Menu.Item as={NavLink} to='/activities' name='Activities' />\n            <Menu.Item as={NavLink} to='/errors' name='Errors' />\n            <Menu.Item>\n              <Button as={NavLink} to='/createActivity' positive content='Create Activity' />\n            </Menu.Item>\n            <Menu.Item position='right'>\n              <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n              <Dropdown pointing='top left' text={user?.displayName}>\n                <Dropdown.Menu>\n                  <Dropdown.Item as={Link} to={`/profiles/${user?.username}`}\n                    text='My Profile' icon='user' />\n                  <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n                </Dropdown.Menu>\n              </Dropdown>\n            </Menu.Item>\n          </>}\n\n      </Container>\n    </Menu>\n  )\n});","import { observer } from 'mobx-react-lite';\nimport Calendar from 'react-calendar';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\n\nexport default observer(function ActivityFilters() {\n  const { activityStore: { predicate, setPredicate } } = useStore();\n  return (\n    <>\n      <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\n        <Header icon='filter' attached color='teal' content='Filters' />\n        <Menu.Item\n          content='All Activites'\n          active={predicate.has('all')}\n          onClick={() => setPredicate('all', 'true')}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date) => setPredicate('startDate', date as Date)}\n        value={predicate.get('startDate') || new Date()}\n      />\n    </>\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { SyntheticEvent } from 'react';\nimport { Reveal, Button } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated='move'>\n      <Reveal.Content visible style={{ width: '100%' }}>\n        <Button\n          fluid\n          color='teal'\n          content={profile.following ? 'Following' : 'Not following'} />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: '100%' }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? 'red' : 'green'}\n          content={profile.following ? 'Unfollow' : 'Follow'}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile }: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\n    }\n  }\n\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='user' />\n        {profile.followersCount} followers\n            </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  )\n});","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image, List, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../app/models/profile';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 2\n  }\n\n  return (\n    <List horizontal>\n      {attendees.map(attendee => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n              <Image\n                size='mini'\n                circular src={attendee.image || '/assets/user.png'}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n\n      ))}\n    </List>\n  )\n});","import { Link } from 'react-router-dom';\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { format } from 'date-fns';\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\n\ninterface Props {\n  activity: Activity\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled &&\n          <Label attached='top' color='red' content='Cancelled' style={{ textAlign: 'center' }} />\n        }\n        <Item.Group>\n          <Item>\n            <Item.Image style={{ marginBottom: 3 }} size='tiny' circular src={activity.host?.image || '/assets/user.png'} />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color='orange'>\n                    You are hosting this activity\n                                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color='green'>\n                    You are going to this activity\n                                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n          <Icon name='marker' /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color='teal'\n          floated='right'\n          content='View'\n        />\n      </Segment>\n    </Segment.Group>\n  )\n};","import { observer } from 'mobx-react-lite';\nimport { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color='teal'>\n            {group}\n          </Header>\n          {activities.map(activity => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  )\n});","import { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color='blue' floated='right' content='View' />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n};","import { observer } from 'mobx-react-lite';\nimport { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport { PagingParams } from '../../../app/models/pagination';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityFilters from './ActivityFilters';\nimport ActivityList from './ActivityList';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1))\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities])\n\n  return (\n    <Grid>\n      <Grid.Column width='10'>\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width='6'>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  )\n});","import { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  type?: string;\n  label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n};","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function LoginForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: '', password: '', error: null }}\n      onSubmit={(values, { setErrors }) => userStore.login(values).catch(error =>\n        setErrors({ error: error.response.data }))}\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Login to Reactivites' color='teal' textAlign='center' />\n          <MyTextInput name='email' placeholder='Email' />\n          <MyTextInput name='password' placeholder='Password' type='password' />\n          <ErrorMessage\n            name='error' render={() =>\n              <Label style={{ marginBottom: 10 }} basic color='red' content={errors.error} />}\n          />\n          <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n        </Form>\n      )}\n    </Formik>\n  )\n})","import { Message } from 'semantic-ui-react';\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  )\n};","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport { Button, Header } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport ValidationErrors from '../errors/ValidationErrors';\n\nexport default observer(function RegisterForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\n      onSubmit={(values, { setErrors }) => userStore.register(values).catch(error =>\n        setErrors({ error }))}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Sign up to Reactivites' color='teal' textAlign='center' />\n          <MyTextInput name='displayName' placeholder='Display Name' />\n          <MyTextInput name='username' placeholder='Username' />\n          <MyTextInput name='email' placeholder='Email' />\n          <MyTextInput name='password' placeholder='Password' type='password' />\n          <ErrorMessage\n            name='error' render={() =>\n              <ValidationErrors errors={errors.error} />}\n          />\n          <Button disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting} positive content='Register' type='submit' fluid />\n        </Form>\n      )}\n    </Formik>\n  )\n})","import { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { Container, Header, Segment, Image, Button, Divider } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign='center' vertical className='masthead'>\n      <Container text>\n        <Header as='h1' inverted>\n          <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\n                  Reactivities\n              </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as='h2' inverted content='Welcome to Reactivities' />\n            <Button as={Link} to='/activities' size='huge' inverted>\n              Go to Activities!\n                      </Button>\n          </>\n\n        ) : (\n          <>\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\n              Login!\n                          </Button>\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\n              Register!\n                          </Button>\n            <Divider horizontal inverted>Or</Divider>\n            <Button\n              loading={userStore.fbLoading}\n              size='huge'\n              inverted\n              color='facebook'\n              content='Login with Facebook'\n              onClick={userStore.facebookLogin}\n            />\n          </>\n        )}\n      </Container>\n    </Segment>\n  )\n});","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nconst LoadingComponents: React.FC<Props> = ({ inverted = true, content = 'Loading...' }) => {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  )\n}\n\nexport default LoadingComponents;","import { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n};","import { useField } from 'formik';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n};","export const categoryOptions = [\n  { text: 'Drinks', value: 'drinks' },\n  { text: 'Culture', value: 'culture' },\n  { text: 'Film', value: 'film' },\n  { text: 'Food', value: 'food' },\n  { text: 'Music', value: 'music' },\n  { text: 'Travel', value: 'travel' },\n]","import { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={value => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  )\n};","import { observer } from 'mobx-react-lite';\nimport { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport LoadingComponents from '../../../app/layout/LoadingComponents';\nimport { useStore } from '../../../app/stores/store';\nimport { v4 as uuid } from 'uuid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from '../../../app/common/form/MySelectInput';\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\nimport MyDateInput from '../../../app/common/form/MyDateInput';\nimport { ActivityFormValues } from '../../../app/models/activity';\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required('The activity title is required'),\n    description: Yup.string().required('The activity description is required'),\n    category: Yup.string().required(),\n    date: Yup.string().required('Date is required').nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  })\n\n  useEffect(() => {\n    if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\n    } else {\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponents content='Loading activity...' />\n\n  return (\n    <Segment clearing>\n      <Header content='Activity Details' sub color='teal' />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={values => handleFormSubmit(values)}>\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n            <MyTextInput name='title' placeholder='Title' />\n            <MyTextArea rows={3} placeholder='Description' name='description' />\n            <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\n            <MyDateInput\n              placeholderText='Date'\n              name='date'\n              showTimeSelect\n              timeCaption='time'\n              dateFormat='MMMM d, yyyy h:mm aa'\n            />\n            <Header content='Location Details' sub color='teal' />\n            <MyTextInput placeholder='City' name='city' />\n            <MyTextInput placeholder='Venue' name='venue' />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting} floated='right'\n              positive type='submit' content='Submit' />\n            <Button as={Link} to='/activities' floated='right' type='button' content='Cancel' />\n          </Form>\n        )}\n      </Formik>\n\n    </Segment>\n  )\n});","import { Formik, Form, Field, FieldProps } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react'\nimport { useStore } from '../../../app/stores/store';\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from 'date-fns'\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    }\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign='center'\n        attached='top'\n        inverted\n        color='teal'\n        style={{ border: 'none' }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())}\n          initialValues={{ body: '' }}\n          validationSchema={Yup.object({\n            body: Yup.string().required()\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className='ui form'>\n              <Field name='body'>\n                {(props: FieldProps) => (\n                  <div style={{ position: 'relative' }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={e => {\n                        if (e.key === 'Enter' && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === 'Enter' && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map(comment => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || '/assets/user.png'} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { Segment, Grid, Icon } from 'semantic-ui-react'\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from 'date-fns';\n\ninterface Props {\n  activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached='top'>\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size='large' color='teal' name='info' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='calendar' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='marker' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>{activity.venue}, {activity.city}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  )\n});","import { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Activity } from '../../../app/models/activity'\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign='center'\n        style={{ border: 'none' }}\n        attached='top'\n        secondary\n        inverted\n        color='teal'\n      >\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n            </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map(attendee => (\n            <Item style={{ position: 'relative' }} key={attendee.username}>\n              {attendee.username === host?.username &&\n                <Label\n                  style={{ position: 'absolute' }}\n                  color='orange'\n                  ribbon='right'\n                >\n                  Host\n                                </Label>}\n              <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Item.Header as='h3'>\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                </Item.Header>\n                {attendee.following &&\n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\n              </Item.Content>\n            </Item>\n          ))}\n\n        </List>\n      </Segment>\n    </>\n\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from 'date-fns';\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white'\n};\n\ninterface Props {\n  activity: Activity\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const { activityStore: { updateAttendance, loading, cancelActivityToggle } } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached='top' style={{ padding: '0' }}>\n        {activity.isCancelled &&\n          <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\n            ribbon color='red' content='Cancelled' />\n        }\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size='huge'\n                  content={activity.title}\n                  style={{ color: 'white' }}\n                />\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                <p>\n                  Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached='bottom'>\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? 'green' : 'red'}\n              floated='left'\n              basic\n              content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button as={Link}\n              disabled={activity.isCancelled}\n              to={`/manage/${activity.id}`}\n              color='orange'\n              floated='right'>\n              Manage Event\n                        </Button>\n          </>\n\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n        ) : (\n          <Button disabled={activity.isCancelled}\n            loading={loading} onClick={updateAttendance} color='teal'>\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponents from '../../../app/layout/LoadingComponents';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedSidebar from './ActivityDetailedSideBar';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const { selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponents />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  )\n});","import { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name='search' />\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n      <Segment.Inline>\n        <Button as={Link} to='/activities' primary>\n          Return to activities page\n                </Button>\n      </Segment.Inline>\n    </Segment>\n  )\n};","import { observer } from 'mobx-react-lite';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n  return (\n    <Container>\n      <Header as='h1' content='Server Error' />\n      <Header sub as='h5' color='red' content={commonStore.error?.message} />\n      {commonStore.error?.details &&\n        <Segment>\n          <Header as='h4' content='Stack trace' color='teal' />\n          <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\n        </Segment>\n      }\n    </Container>\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n      <Modal.Content>\n        {modalStore.modal.body}\n      </Modal.Content>\n    </Modal>\n  )\n});","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button } from \"semantic-ui-react\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from 'yup';\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\n  const { profileStore: { profile, updateProfile } } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={values => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        })\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required()\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className='ui form'>\n          <MyTextInput placeholder='Display Name' name='displayName' />\n          <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\n          <Button\n            positive\n            type='submit'\n            loading={isSubmitting}\n            content='Update profile'\n            floated='right'\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  )\n});","import { useState } from 'react';\nimport { useStore } from \"../../app/stores/store\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport { observer } from 'mobx-react-lite';\n\nexport default observer(function ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\n          {isCurrentUser && (\n            <Button\n              floated='right'\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width='16'>\n          {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>}\n\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n});","import { SyntheticEvent, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { UserActivity } from '../../app/models/profile';\nimport { format } from 'date-fns';\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'future' } },\n  { menuItem: 'Past Events', pane: { key: 'past' } },\n  { menuItem: 'Hosting', pane: { key: 'hosting' } }\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const {\n    loadUserActivities,\n    profile,\n    loadingActivities,\n    userActivities\n  } = profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content={'Activities'} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: 'cover' }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                  <Card.Meta textAlign='center'>\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});","import { Tab, Grid, Header, Card } from \"semantic-ui-react\";\nimport ProfileCard from \"./ProfileCard\";\nimport { useStore } from \"../../app/stores/store\";\nimport { observer } from 'mobx-react-lite';\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header\n            floated='left'\n            icon='user'\n            content={activeTab === 3 ? `People following ${profile!.displayName}` : `People ${profile?.displayName} is following`}\n          />\n        </Grid.Column>\n        <Grid.Column width='16'>\n          <Card.Group itemsPerRow={4}>\n            {followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n});","import { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({ imagePreview, setCropper }: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: '100%' }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={cropper => setCropper(cropper)}\n    />\n  )\n}","import { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react'\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200\n  }\n\n  const dzActive = {\n    borderColor: 'green'\n  }\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles} >\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  )\n}","import { useEffect, useState } from 'react';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview))\n    }\n  }, [files])\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 1 - Add Photo' />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 2 - Resize image' />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 3 - Preview & Upload' />\n        {files && files.length > 0 &&\n          <>\n            <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\n            <Button.Group widths={2}>\n              <Button loading={loading} onClick={onCrop} positive icon='check' />\n              <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\n            </Button.Group>\n          </>}\n\n      </Grid.Column>\n    </Grid>\n  )\n}","import { observer } from 'mobx-react-lite';\nimport { SyntheticEvent, useState } from 'react';\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n  const { profileStore: { isCurrentUser, uploadPhoto,\n    uploading, loading, setMainPhoto, deletePhoto } } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState('');\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='image' content='Photos' />\n          {isCurrentUser && (\n            <Button floated='right' basic\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map(photo => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color='green'\n                        content='Main'\n                        name={'main' + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === 'main' + photo.id && loading}\n                        onClick={e => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color='red'\n                        icon='trash'\n                        loading={target === photo.id && loading}\n                        onClick={e => handleDeletePhoto(photo, e)}\n                        disabled={photo.isMain}\n                        name={photo.id}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileActivities from './ProfileActivities';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n\n  const panes = [\n    { menuItem: 'About', render: () => <ProfileAbout /> },\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: 'Events', render: () => <ProfileActivities /> },\n    { menuItem: 'Followers', render: () => <ProfileFollowings /> },\n    { menuItem: 'Following', render: () => <ProfileFollowings /> },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1' content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label='Followers' value={profile.followersCount} />\n            <Statistic label='Following' value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  )\n});","import { observer } from 'mobx-react-lite';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponents from '../../app/layout/LoadingComponents';\nimport { useStore } from '../../app/stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    }\n  }, [loadProfile, username, setActiveTab])\n\n  if (loadingProfile) return <LoadingComponents content='Loading profile...' />\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile &&\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>}\n      </Grid.Column>\n    </Grid>\n  )\n});","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const { userStore: { isLoggedIn } } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\n    />\n  )\n};","import { useState } from 'react';\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as='h1' content='Test Error component' />\n      <Segment>\n        <Button.Group widths='7'>\n          <Button onClick={handleNotFound} content='Not Found' basic primary />\n          <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n          <Button onClick={handleValidationError} content='Validation Error' basic primary />\n          <Button onClick={handleServerError} content='Server Error' basic primary />\n          <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n          <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n        </Button.Group>\n      </Segment>\n      {errors &&\n        <ValidationErrors errors={errors} />\n      }\n    </>\n  )\n};","import { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport { useEffect } from 'react';\nimport LoadingComponents from './LoadingComponents';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\nimport TestErrors from '../../features/errors/TestErrors';\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponents content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                {/* <Route path='/account/registerSuccess' component={RegisterSuccess} />\n                <Route path='/account/verifyEmail' component={ConfirmEmail} /> */}\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};","import ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/style.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}